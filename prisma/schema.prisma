// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Store {
  id         String     @id @default(uuid())
  name       String     @unique
  categories Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id   String @id @default(uuid())
  name String @unique
  slug String @unique

  products Product[]

  storeId String
  store   Store  @relation(fields: [storeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String @id @default(uuid())
  name        String @unique
  slug        String @unique
  description String
  price       Int

  colors    Color[]
  sizes     Size[]
  inventory Inventory[]

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id         String  @id @default(uuid())
  name       String
  value      String
  altText    String
  image      String  @unique
  isFeatured Boolean @default(false)

  inventory Inventory[]

  productId String
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id    String @id @default(uuid())
  name  String
  value String

  productId String
  product   Product @relation(fields: [productId], references: [id])

  inventory Inventory[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Inventory {
  id        String @id @default(uuid())
  sku       String
  inventory Int

  productId String
  product   Product @relation(fields: [productId], references: [id])

  colorId String
  color   Color  @relation(fields: [colorId], references: [id])

  sizeId String
  size   Size   @relation(fields: [sizeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
